openapi: 3.0.1
info:
  title: Sunbird Asset Management API(s)
  description: >-
    The Asset Management API allows you to manage asset over the sunbird
    platform.Apis perform operations related to all the _Asset_ on the Sunbird
    Platform. 

    - Each of the endpoints serve a different purpose, so which one to use
    depends on what you want to do

    - The operations include CRUD (Create, Update, Read and Delete) operations
    and other operations such as upload etc. 

    - The URL for Sunbird Asset API(s) is `asset/v1` 

    - [TestCases](https://www.getpostman.com/collections/40dde03073826216533a)
  termsOfService: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
  contact:
    email: info@sunbird.org
  version: "1.0"
servers:
  - url: 'https://staging.sunbirded.org/api'
paths:
  /asset/v1/create:
    post:
      tags:
        - Asset APIs
      summary: Create Asset
      description: |-
        This API is associated with creating asset on the Sunbird Platform.
          - The endpoint for **Create Asset** is `/asset/v1/create`
          - It points to knowledge-mw-service - `/v1/content/create`
          - It is mandatory to provide values for parameters marked with *. 
          - Mandatory fields cannot be null or empty.
      operationId: Create Asset
      parameters:
        - name: Content-Type
          in: header
          description: >-
            The Content Type entity is the media type of the resource.Possible
            media types can be:- 
              - Application/json
          required: true
          schema:
            type: string
        - name: x-channel-id
          in: header
          description: >-
            Represents a physical location (e.g: state) uniquely to which the
            user belongs.
          required: true
          schema:
            type: string
        - name: X-Authenticated-User-Token
          in: header
          description: Represents the authorized User ID to execute the API.
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: >-
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the
            authorization key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          'The body parameter refers to the format of the request, the request
          body (payload) takes the following media types to make the payload:'
          
           - JSON 
          
          The body is the representation of the resource object for creating
          asset (an array of parameters which describes the asset) 
          
          - Please refer for supported
          [metadata](https://github.com/project-sunbird/knowledge-platform/blob/release-4.6.0/schemas/asset/1.0/schema.json)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetapiCreateAssetRequest'
            example:
              request:
                content:
                  name: H5P Content
                  code: h5pcontent
                  mimeType: application/vnd.ekstep.h5p-archive
                  contentType: Resource
                  createdBy: 874ed8a5-782e-4f6c-8f36-e0288455901e
        required: true
      responses:
        '200':
          description: SUCCESS. The **Create Content** operation was successful!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contentapiContentCreateSuccessResponse'
              example:
                id: api.content.create
                ver: '3.0'
                ts: '2020-12-10T20:24:45ZZ'
                params:
                  resmsgid: 3be02c4b-3324-41a3-afd8-60f6be0584d2
                  msgid: null
                  err: null
                  status: successful
                  errmsg: null
                responseCode: OK
                result:
                  identifier: do_1131697204035993601314
                  node_id: do_1131697204035993601314
                  versionKey: '1607631885207'
        '400':
          description: >-
            'BAD REQUEST. The **Create Content** operation failed. You may have
            missed input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contentapiContentCreateErrorResponse'
              example:
                id: api.content.create
                ver: '1.0'
                ts: '2020-12-10T08:50:29.786Z'
                params:
                  resmsgid: c169a7a0-3ac4-11eb-b0a2-8d5c9f561887
                  msgid: null
                  status: failed
                  err: ERR_CONTENT_CREATE_FIELDS_MISSING
                  errmsg: Required fields for create content are missing
                responseCode: CLIENT_ERROR
                result: { }
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try
            to set it right at the earliest. Try refreshing the page. If the
            problem persists contact us at info@sunbird.org.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contentapiContentCreateErrorResponse'
              example:
                id: api.content.create
                ver: '1.0'
                ts: '2020-12-10T08:51:51.647Z'
                params:
                  resmsgid: f234a6f0-3ac4-11eb-b0a2-8d5c9f561887
                  msgid: null
                  status: failed
                  err: null
                  errmsg: null
                responseCode: SERVER_ERROR
                result: { }
      deprecated: false
      security:
        - bearer: [ ]
components:
  schemas:
    assetapiCreateAssetRequest:
      title: Request Object
      required:
        - request
      type: object
      properties:
        request:
          $ref: '#/components/schemas/assetapiAssetCreateRequestAsset'
    assetapiAssetCreateRequestAsset:
      title: Request
      required:
        - asset
      type: object
      properties:
        content:
          $ref: '#/components/schemas/assetapiAssetCreateRequestAssetObject'
    assetapiAssetCreateRequestAssetObject:
      title: Asset
      required:
        - name
        - createdBy
      type: object
      properties:
        name:
          type: string
          description: Represents the name of the content
        createdBy:
          type: string
          description: ID of the user who created Content